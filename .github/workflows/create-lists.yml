name: Create lists domains

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/create-lists.yml
      - src/**
      - src/convert.py
  workflow_dispatch:  # Позволяет запускать вручную через GitHub UI
  schedule:
    - cron: '17 0 */3 * *'

permissions:
  contents: write
  # Добавляем разрешение на создание релизов
  releases: write

jobs:
  generate-lists:
    runs-on: ubuntu-24.04  # Используем Ubuntu как среду выполнения

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4  # Скачиваем код репозитория

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'

      - name: Install dependencies # Устанавливаем зависимости
        run: |
          python -m pip install --upgrade pip
          pip install tldextract

      - name: Run script
        run: python src/convert.py  # Запускаем скрипт

      - name: Update date variable
        id: get_date
        run: |
          echo "date=$(date -u +'%d-%m-%Y %H:%M UTC')" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_date.outputs.date }} # Используем дату как часть тега
          release_name: Release ${{ steps.get_date.outputs.date }}
          draft: false # Публикуем релиз сразу
          prerelease: false
          body: |
            Актуальные списки доменов на ${{ steps.get_date.outputs.date }}.

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./all_domains.lst
          asset_name: all_domains.lst
          asset_content_type: text/plain

      - name: Upload Release Assets dnsmasq
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dnsmasq-nfset.lst
          asset_name: dnsmasq-nfset.lst
          asset_content_type: text/plain

      - name: Push lists
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            all_domains.lst
            dnsmasq-nfset.lst
          author_name: GitHub Action
          author_email: githubaction@githubaction.com
          message: |
            Update list domain: ${{ steps.get_date.outputs.date }}
          push: true
